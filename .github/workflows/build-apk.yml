name: Build Android APK

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '8'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git zip unzip openjdk-17-jdk wget
        sudo apt-get install -y autoconf libtool pkg-config zlib1g-dev libncurses5-dev libncursesw5-dev libtinfo5 cmake libffi-dev libssl-dev
        sudo apt-get install -y build-essential ccache m4 libtool libltdl-dev python3-dev

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython kivy kivymd pillow requests

    - name: Setup Android SDK & NDK
      run: |
        # Set up Android SDK
        export ANDROID_HOME=$HOME/android-sdk
        export ANDROID_SDK_ROOT=$ANDROID_HOME
        mkdir -p $ANDROID_HOME

        # Download command line tools
        cd $ANDROID_HOME
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip -q commandlinetools-linux-9477386_latest.zip
        mkdir -p cmdline-tools/latest
        mv cmdline-tools/* cmdline-tools/latest/ 2>/dev/null || true

        # Set PATH
        export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools

        # Accept licenses and install packages
        yes | sdkmanager --licenses || true
        sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.2" "ndk;25.2.9519653"

        # Create buildozer directory structure
        mkdir -p $HOME/.buildozer/android/platform
        cp -r $ANDROID_HOME $HOME/.buildozer/android/platform/android-sdk

        # Create aidl wrapper script
        mkdir -p $HOME/.buildozer/android/platform/android-sdk/build-tools/33.0.2
        echo '#!/bin/bash' > $HOME/.buildozer/android/platform/android-sdk/build-tools/33.0.2/aidl
        echo 'echo "aidl wrapper - doing nothing"' >> $HOME/.buildozer/android/platform/android-sdk/build-tools/33.0.2/aidl
        echo 'exit 0' >> $HOME/.buildozer/android/platform/android-sdk/build-tools/33.0.2/aidl
        chmod +x $HOME/.buildozer/android/platform/android-sdk/build-tools/33.0.2/aidl

        # Set environment variables for next steps
        echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$ANDROID_HOME" >> $GITHUB_ENV
        echo "ANDROID_NDK_HOME=$ANDROID_HOME/ndk/25.2.9519653" >> $GITHUB_ENV
        echo "PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools" >> $GITHUB_ENV

    - name: Build APK
      run: |
        # Debug info
        echo "ANDROID_HOME: $ANDROID_HOME"
        echo "ANDROID_NDK_HOME: $ANDROID_NDK_HOME"
        echo "Build tools directory:"
        ls -la $HOME/.buildozer/android/platform/android-sdk/build-tools/ || echo "Build tools not found"

        # Build APK with verbose log
        buildozer -v android debug log_level=2 || (cat ./.buildozer/android/platform/build-armeabi-v7a/build/outputs/logs/* || true)

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: android-apk
        path: |
          bin/*.apk
          .buildozer/android/platform/build-armeabi-v7a/dists/*/bin/*.apk
        retention-days: 30

    - name: Create Release and Upload APK (if on main or tag)
      if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: |
          bin/*.apk
          .buildozer/android/platform/build-armeabi-v7a/dists/*/bin/*.apk
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: |
          自动构建并上传的 APK 文件。
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
