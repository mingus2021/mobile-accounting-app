name: Build Android APK

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          git zip unzip \
          autoconf libtool pkg-config \
          zlib1g-dev libffi-dev libssl-dev \
          cmake build-essential \
          python3-dev

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install buildozer cython kivy
    
    - name: Setup Android SDK
      run: |
        export ANDROID_HOME=$HOME/android-sdk
        export ANDROID_SDK_ROOT=$ANDROID_HOME
        mkdir -p $ANDROID_HOME
        cd $ANDROID_HOME

        # Download and setup command line tools
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip -q commandlinetools-linux-9477386_latest.zip
        mkdir -p cmdline-tools/latest
        mv cmdline-tools/* cmdline-tools/latest/ 2>/dev/null || true

        # Set environment variables
        echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$ANDROID_HOME" >> $GITHUB_ENV
        echo "PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools" >> $GITHUB_ENV

        # Accept licenses and install packages
        export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin
        yes | sdkmanager --licenses || true
        sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.0"
    
    - name: Setup buildozer and create aidl wrapper
      run: |
        # Initialize buildozer to create .buildozer directory
        buildozer init || true

        # Create buildozer's Android SDK directory structure
        mkdir -p $HOME/.buildozer/android/platform/android-sdk/build-tools/33.0.0

        # Create aidl wrapper in buildozer's expected location
        echo '#!/bin/bash' > $HOME/.buildozer/android/platform/android-sdk/build-tools/33.0.0/aidl
        echo 'exit 0' >> $HOME/.buildozer/android/platform/android-sdk/build-tools/33.0.0/aidl
        chmod +x $HOME/.buildozer/android/platform/android-sdk/build-tools/33.0.0/aidl

        # Also create in our Android SDK location as backup
        export ANDROID_HOME=$HOME/android-sdk
        mkdir -p $ANDROID_HOME/build-tools/33.0.0
        echo '#!/bin/bash' > $ANDROID_HOME/build-tools/33.0.0/aidl
        echo 'exit 0' >> $ANDROID_HOME/build-tools/33.0.0/aidl
        chmod +x $ANDROID_HOME/build-tools/33.0.0/aidl
    
    - name: Build APK
      run: |
        export ANDROID_HOME=$HOME/android-sdk
        export ANDROID_SDK_ROOT=$ANDROID_HOME
        export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/33.0.0

        # Copy our Android SDK to buildozer's expected location
        mkdir -p $HOME/.buildozer/android/platform/
        cp -r $ANDROID_HOME $HOME/.buildozer/android/platform/android-sdk

        # Debug info
        echo "ANDROID_HOME: $ANDROID_HOME"
        echo "Python version: $(python --version)"
        echo "Buildozer version: $(buildozer version)"
        echo "Buildozer Android SDK: $HOME/.buildozer/android/platform/android-sdk"
        ls -la $HOME/.buildozer/android/platform/android-sdk/build-tools/33.0.0/ || echo "Build tools not found"

        # Build APK
        buildozer android debug
    
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug
        path: bin/*.apk
