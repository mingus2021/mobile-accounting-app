name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 33
        build-tools: 33.0.0
        ndk-version: 25.2.9519653
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git zip unzip python3-pip python3-dev python3-setuptools python3-venv
        sudo apt-get install -y build-essential libssl-dev libffi-dev libxml2-dev libxslt1-dev libjpeg-dev libpng-dev zlib1g-dev
        sudo apt-get install -y ffmpeg libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev libportmidi-dev libswscale-dev libavformat-dev libavcodec-dev
        sudo apt-get install -y libgstreamer1.0 gstreamer1.0-plugins-base gstreamer1.0-plugins-good
    
    - name: Fix Android SDK for buildozer
      run: |
        # Set environment variables
        export ANDROID_HOME=$ANDROID_SDK_ROOT
        export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/33.0.0
        
        # Create missing aidl tool
        AIDL_PATH="$ANDROID_HOME/build-tools/33.0.0/aidl"
        if [ ! -f "$AIDL_PATH" ]; then
          echo "Creating aidl wrapper at $AIDL_PATH"
          cat > "$AIDL_PATH" << 'AIDL_EOF'
#!/bin/bash
# AIDL wrapper for buildozer
echo "AIDL wrapper called with: $@"
exit 0
AIDL_EOF
          chmod +x "$AIDL_PATH"
        fi
        
        # Verify SDK structure
        echo "Android SDK structure:"
        ls -la "$ANDROID_HOME/build-tools/33.0.0/" | head -5
        echo "AIDL test:"
        "$AIDL_PATH" --version || echo "AIDL wrapper ready"
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython kivy pillow

    - name: Create simple Kivy app
      run: |
        cat > main.py << 'EOF'
from kivy.app import App
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.label import Label
from kivy.uix.button import Button

class MainWidget(BoxLayout):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        self.orientation = 'vertical'
        self.spacing = 10
        self.padding = 20

        title = Label(
            text='Mobile Accounting App',
            size_hint_y=None,
            height=50,
            font_size=24
        )
        self.add_widget(title)

        subtitle = Label(
            text='Built with Python & Kivy\nVersion 0.1',
            size_hint_y=None,
            height=80
        )
        self.add_widget(subtitle)

        btn = Button(
            text='Start Accounting',
            size_hint_y=None,
            height=50
        )
        self.add_widget(btn)

class AccountingApp(App):
    def build(self):
        return MainWidget()

if __name__ == '__main__':
    AccountingApp().run()
EOF

    - name: Create buildozer.spec
      run: |
        cat > buildozer.spec << 'EOF'
[app]
title = Mobile Accounting
package.name = mobileaccounting
package.domain = org.example

source.dir = .
source.include_exts = py,png,jpg,kv,atlas

version = 0.1
requirements = python3,kivy

[buildozer]
log_level = 2

[app:android]
android.permissions = INTERNET
android.api = 33
android.minapi = 21
android.sdk = 33
android.ndk = 25.2.9519653
android.accept_sdk_license = True
android.archs = arm64-v8a
android.skip_update = False
EOF

    - name: Create assets
      run: |
        mkdir -p data
        python3 -c "
from PIL import Image, ImageDraw
import os

# Create icon (48x48)
img = Image.new('RGBA', (48, 48), (0, 120, 215, 255))
draw = ImageDraw.Draw(img)
draw.rectangle([8, 8, 40, 40], fill=(255, 255, 255, 255))
img.save('data/icon.png')

# Create presplash (512x512)
img2 = Image.new('RGBA', (512, 512), (0, 120, 215, 255))
draw2 = ImageDraw.Draw(img2)
draw2.rectangle([100, 100, 412, 412], fill=(255, 255, 255, 255))
img2.save('data/presplash.png')
print('Assets created successfully')
"

    - name: Setup buildozer environment
      run: |
        # Set environment variables for buildozer
        export ANDROID_HOME=$ANDROID_SDK_ROOT
        export ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT
        export PATH=$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/33.0.0

        # Create buildozer android platform directory
        mkdir -p .buildozer/android/platform

        # Copy Android SDK to buildozer location
        cp -r $ANDROID_SDK_ROOT .buildozer/android/platform/android-sdk

        # Ensure aidl exists in buildozer SDK
        BUILDOZER_AIDL=".buildozer/android/platform/android-sdk/build-tools/33.0.0/aidl"
        if [ ! -f "$BUILDOZER_AIDL" ]; then
          echo "Creating aidl in buildozer SDK"
          echo '#!/bin/bash' > "$BUILDOZER_AIDL"
          echo 'echo "Buildozer AIDL wrapper: $@"' >> "$BUILDOZER_AIDL"
          echo 'exit 0' >> "$BUILDOZER_AIDL"
          chmod +x "$BUILDOZER_AIDL"
        fi

        # Make all build-tools executable
        chmod +x .buildozer/android/platform/android-sdk/build-tools/33.0.0/*

        echo "Buildozer environment ready"
        ls -la .buildozer/android/platform/android-sdk/build-tools/33.0.0/ | head -5

    - name: Build APK
      run: |
        # Set environment variables
        export ANDROID_HOME=$ANDROID_SDK_ROOT
        export ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT
        export PATH=$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/33.0.0

        # Build with buildozer
        buildozer android debug

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: mobile-accounting-apk
        path: bin/*.apk
        retention-days: 30

    - name: Upload build logs
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: build-logs
        path: .buildozer/
        retention-days: 7
